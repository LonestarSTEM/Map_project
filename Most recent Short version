#include <Adafruit_MCP23X17.h> //Using Adafruit library for MCP23017
#include <LiquidCrystal.h>//Using Liquid Crystal.h for display library

Adafruit_MCP23X17 mcp0; //Instantiate mcp object
Adafruit_MCP23X17 mcp1; //Instantiate mcp object
int dly=250; // 1/4 second delay
const static int buttons[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}; // Pins on MCP
const static int lights[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};//Pins on MCP
/*LiquidCrystal lcd(7, 8, 9, 10, 11, 12);
int count=0;
int press;*/

void setup() {
 /* lcd.begin(16,2);*/ // set up the LCD's number of columns and rows

  Serial.begin(9600);
  mcp0.begin_I2C(0x20);// 000-Gnd,Gnd,Gnd-using chip Address along with hardwiring to declare these seperately.
  mcp1.begin_I2C(0x21);// 001-Gnd,Gnd,5v.
 
  for(int x = 0; x < sizeof(buttons)/sizeof(int); x++) // Iterates through all buttons
  {
    mcp0.pinMode(buttons[x], INPUT_PULLUP); // Places Pin "x" into a natural HIGH state
  } 
  for(int x = 0; x < sizeof(lights)/sizeof(int); x++) // Iterates through all LEDs
  {
    mcp1.pinMode(lights[x], OUTPUT); // Set LEDs to output
  } 
}

void loop() {
  for(int x = 0; x < sizeof(buttons)/sizeof(int); x++) // Iterate through all buttons
  {
    if (mcp0.digitalRead(buttons[x]) == LOW) // Check state of buttons
    {
        mcp1.digitalWrite(lights[x], HIGH); // Turn on LED
       /* press = count++;*/
        delay(200); // Wait
        mcp1.digitalWrite(lights[x], LOW); // Turn off LED
    }
  }
}
    /*lcd.setCursor(0,0);
    lcd.print("Button Count");// Print a message to the LCD.
    lcd.setCursor(0,2);
    lcd.print(press);*/
  
/*}*/
